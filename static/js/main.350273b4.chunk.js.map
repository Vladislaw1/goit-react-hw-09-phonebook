{"version":3,"sources":["components/header/Navigation/SiteNav/SiteNav.module.css","view/styles/RegisteView.module.css","components/content/addContactForm/addContactForm.module.css","view/styles/LoginView.module.css","components/header/Navigation/AuthNav/AuthNav.module.css","components/content/ContactListItem/ContactListItem.module.css","components/content/ContactList/ContactList.module.css","view/HomeView.js","components/content/addContactForm/initialState.js","components/content/addContactForm/fields.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/token.js","redux/contacts/contacts-operations.js","add.png","components/content/addContactForm/addContactForm.jsx","remove.png","components/content/ContactListItem/ContactListItem.js","components/content/Filter/Filter.jsx","components/content/ContactList/ContactList.js","view/ContactView.js","view/fields.js","view/state/InitialState.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","view/RegisterView.js","view/LoginView.js","view/TodoView.js","redux/auth/auth-selectors.js","components/header/Navigation/SiteNav/SiteNav.jsx","components/header/Navigation/AuthNav/AuthNav.jsx","avatar.png","components/header/Navigation/UserMenu/UserMenu.js","components/header/Navigation/AppBar.js","components/header/Header.jsx","PrivetRoute.js","PublicRoute.js","Contacts.js","redux/auth/auth-reducer.js","redux/contacts/contacts-reducer.js","redux/todo/todo-reducer.js","redux/store.js","App.js","index.js"],"names":["module","exports","HomeView","state","name","number","fields","placeholder","autoComplete","type","title","required","allContacts","contacts","list","filterSel","filter","loading","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterAction","userToken","token","axios","defaults","headers","common","fetchContacts","dispatch","a","localToken","localStorage","getItem","get","data","message","addContact","infoUser","post","deleteContact","contactId","delete","AddContactForm","useDispatch","useState","contact","setContact","useSelector","useEffect","handleChange","target","value","reset","className","styles","formAdd","onSubmit","e","preventDefault","find","item","toLowerCase","alert","input","onChange","btnAdd","src","add","width","ContactListItem","normalozeFilter","contactEl","includes","map","id","contactListItem","onClick","btnDelete","remove","Filter","filterSelector","ContactList","contactList","ContactView","open","setOpen","isAuthenticated","auth","getIsAuthenticated","isLoading","contentPage","length","text","memo","email","password","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","baseURL","RegisterView","user","setUser","inputNameId","shortid","generate","inputEmailId","inputPassId","wrapper","setItem","signin","pass","to","LoginView","TodoView","userName","SiteNav","exact","link","activeClassName","activeLink","AuthNav","UserMenu","userMenu","display","alignItems","img","border","style","defAvatar","alt","AppBar","height","justifyContent","borderBottom","Header","PrivetRoute","Component","component","redirectTo","routeProps","render","props","PublicRoute","restricted","Contacts","getState","fallback","path","initialUserState","createReducer","_","payload","error","combineReducers","todo","middleware","getDefaultMiddleware","thunk","store","configureStore","reducer","authReducer","contactsReducer","todoReducer","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.350273b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"SiteNav_link__2VyMl\",\"activeLink\":\"SiteNav_activeLink__1doie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RegisteView_wrapper__2W20d\",\"signin\":\"RegisteView_signin__1iQEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formAdd\":\"addContactForm_formAdd__3hoFo\",\"label\":\"addContactForm_label__37-ll\",\"input\":\"addContactForm_input__fH8nd\",\"btnAdd\":\"addContactForm_btnAdd__2ebLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginView_wrapper__25O_t\",\"signin\":\"LoginView_signin__1qvIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__Jnr6j\",\"activeLink\":\"AuthNav_activeLink__xKhUw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactListItem_btnDelete__cMIqC\",\"contactListItem\":\"ContactListItem_contactListItem__coLxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__36xcj\"};","import React from 'react';\r\n\r\nconst HomeView = () => {\r\n    return (\r\n        <div>\r\n            <p>Hello User</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeView;","export const state = {\r\n    name: \"\",\r\n    number: \"\"\r\n}","export const fields = {\r\n    nameContact:{\r\n        placeholder: \"Name\",\r\n        autoComplete: \"off\",\r\n        type: \"text\",\r\n        name: \"name\",\r\n        title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n        required : \"required\"\r\n    },\r\n    numberContact: {\r\n        placeholder: \"Number\",\r\n        autoComplete: \"off\",\r\n        type: \"tel\",\r\n        name: \"number\",\r\n        title: \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n        required : \"required\"\r\n    }\r\n}","export const getIsAuthenticated = state => !!state.auth.token\r\n\r\nexport const allContacts = state => state.contacts.list;\r\nexport const filterSel = state => state.contacts.filter\r\nexport const loading = state => state.contacts.loading","import {createAction} from \"@reduxjs/toolkit\";\r\n\r\n///////////////////FETCH\r\n\r\nexport const fetchContactsRequest = createAction(\"auth/fetchContactsRequest\")\r\nexport const fetchContactsSuccess = createAction(\"auth/fetchContactsSuccess\")\r\nexport const fetchContactsError = createAction(\"auth/fetchContactsError\")\r\n\r\n//////////////////ADD\r\n\r\nexport const addContactRequest = createAction(\"auth/addContactRequest\")\r\nexport const addContactSuccess = createAction(\"auth/addContactSuccess\")\r\nexport const addContactError = createAction(\"auth/addContactError\")\r\n\r\n/////////////////DELETE\r\n\r\nexport const deleteContactRequest = createAction(\"auth/deleteContactRequest\")\r\nexport const deleteContactSuccess = createAction(\"auth/deleteContactSuccess\")\r\nexport const deleteContactError = createAction(\"auth/deleteContactError\")\r\n////////////////FILTER\r\nexport const filterAction = createAction(\"auth/filterAction\")\r\n\r\nconst contactAction = {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n}\r\n\r\nexport default contactAction;","import axios from \"axios\";\r\n\r\nexport const userToken = {\r\n    set(token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common['Authorization'] = \"\";\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nimport {\r\n    addContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    deleteContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    fetchContactsError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess\r\n} from \"./contacts-actions\";\r\nimport {userToken} from \"../token\";\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n\r\n    let  localToken = localStorage.getItem(\"userToken\")\r\n    userToken.set(localToken)\r\n\r\n    dispatch(fetchContactsRequest())\r\n    try {\r\n        const {data} = await axios.get(\"/contacts\")\r\n        dispatch(fetchContactsSuccess(data))\r\n    } catch (error) {\r\n        dispatch(fetchContactsError(error.message))\r\n    }\r\n}\r\n\r\nexport const addContact = infoUser => async dispatch => {\r\n    dispatch(addContactRequest())\r\n    try {\r\n        const {data} = await axios.post(\"/contacts\", infoUser)\r\n        dispatch(addContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(addContactError(error.message))\r\n    }\r\n}\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n    dispatch(deleteContactRequest())\r\n    try {\r\n        await axios.delete(`/contacts/${contactId}`)\r\n        dispatch(deleteContactSuccess(contactId))\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error.message))\r\n    }\r\n}\r\n\r\nexport const contactOperation = {\r\n    fetchContacts,\r\n    addContact,\r\n    deleteContact,\r\n}","export default __webpack_public_path__ + \"static/media/add.ec327133.png\";","import React,{useEffect,useState} from 'react';\r\nimport shortid from \"shortid\"\r\nimport {state } from \"./initialState\"\r\nimport {fields} from \"./fields\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {allContacts} from \"../../../redux/contacts/contacts-selectors\";\r\nimport {addContact, fetchContacts} from \"../../../redux/contacts/contacts-operations\";\r\n\r\nimport add from \"../../../add.png\"\r\n\r\nimport styles from \"./addContactForm.module.css\"\r\n\r\nfunction AddContactForm(){\r\n    const dispatch = useDispatch()\r\n    const [contact,setContact] = useState(state)\r\n    const list = useSelector(allContacts)\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchContacts())\r\n    },[dispatch])\r\n\r\n    const handleChange = ({target}) => {\r\n        const {name,value} = target;\r\n        setContact(contact => {\r\n            return{...contact,[name]: value}\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const result = list.find(item => (item.name.toLowerCase() === contact.name.toLowerCase() || item.number === contact.number))\r\n\r\n        result ? alert(\"Контакт существует!!!\") : dispatch(addContact(contact))\r\n\r\n        reset();\r\n    }\r\n\r\n    const reset = () =>{\r\n        setContact({\r\n            name: \"\",\r\n            number: \"\"\r\n        })\r\n    }\r\n\r\n\r\n        return (\r\n            <div className={styles.formAdd}>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <input\r\n                        className={styles.input}\r\n                        value={contact.name}\r\n                        {...fields.nameContact}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <input\r\n                        className={styles.input}\r\n                        value={contact.number}\r\n                        {...fields.numberContact}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <button type=\"submit\" className={styles.btnAdd}><img src={add} width={50}/></button>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\nexport default AddContactForm;","export default __webpack_public_path__ + \"static/media/remove.c815fcfa.png\";","import React from 'react';\r\nimport {deleteContact} from \"../../../redux/contacts/contacts-operations\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {allContacts, filterSel} from \"../../../redux/contacts/contacts-selectors\";\r\nimport remove from \"../../../remove.png\"\r\n\r\nimport styles from \"./ContactListItem.module.css\"\r\n\r\nconst ContactListItem = () => {\r\n    const dispatch = useDispatch()\r\n    const list = useSelector(allContacts)\r\n    const filter = useSelector(filterSel)\r\n\r\n\r\n    const normalozeFilter = filter.toLowerCase()\r\n\r\n    const filterContacts = list.filter(({ name,number }) =>  name.toLowerCase().includes(normalozeFilter) || number.includes(normalozeFilter))\r\n\r\n    const contactEl = filterContacts.map(({id,name,number}) => {\r\n        return <li key={id} className={styles.contactListItem}>\r\n            <p>{name} |=> {number}</p>\r\n            <button type=\"button\" onClick={() => dispatch(deleteContact(id))} className={styles.btnDelete}><img src={remove} width={20}/></button>\r\n        </li>\r\n    })\r\n    return (\r\n        <>\r\n            {contactEl}\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {filterAction} from \"../../../redux/contacts/contacts-actions\";\r\nimport {filterSel} from \"../../../redux/contacts/contacts-selectors\";\r\n\r\nfunction Filter ()  {\r\n\r\n    const filterSelector = useSelector(filterSel)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = ({target}) =>{\r\n        const {value} = target\r\n        dispatch(filterAction(value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type={\"text\"} value={filterSelector} onChange={handleChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport ContactListItem from \"../ContactListItem\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport styles from \"./ContactList.module.css\"\r\n\r\nfunction ContactList() {\r\n    return (\r\n        <div>\r\n            <Filter/>\r\n            <ul className={styles.contactList}>\r\n                <ContactListItem/>\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactList;","import React, {useState, memo} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport AddContactForm from \"../components/content/addContactForm/addContactForm\";\r\nimport {allContacts, getIsAuthenticated, loading} from \"../redux/contacts/contacts-selectors\";\r\n\r\nimport ContactList from \"../components/content/ContactList\";\r\n\r\nfunction ContactView() {\r\n    const [open, setOpen] = useState(false);\r\n    const isAuthenticated = useSelector(state => getIsAuthenticated(state))\r\n    const list = useSelector(state => allContacts(state))\r\n    const isLoading = useSelector(loading)\r\n\r\n    const contentPage = (isAuthenticated && (list.length > 0) ? <ContactList/> : <p>Contact list is empty!!!</p>)\r\n    const contactList = isLoading ? <p>.....Loading</p> : contentPage\r\n    const text = open ? \"Close contact\" : \"Open contact\"\r\n\r\n    return (\r\n        <>\r\n            <AddContactForm/>\r\n            <button type=\"button\" onClick={() => setOpen(!open)}>{text}</button>\r\n            {open && contactList}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(ContactView);\r\n","export const fields = {\r\n    userName:{\r\n        placeholder:\"name\",\r\n        type: \"text\",\r\n        name: \"name\",\r\n        title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n        required : \"required\"\r\n    },\r\n    userPass:{\r\n        placeholder:\"password\",\r\n        type: \"password\",\r\n        name: \"password\",\r\n        required : \"required\"\r\n    },\r\n    userEmail:{\r\n        placeholder:\"email\",\r\n        type: \"email\",\r\n        name: \"email\",\r\n        required : \"required\"\r\n    },\r\n}","export const state = {\r\n    register: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    },\r\n    login:{\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n}","import {createAction} from \"@reduxjs/toolkit\";\r\n\r\n///////////////////REGISTER\r\n\r\nexport const registerRequest = createAction(\"auth/registerRequest\")\r\nexport const registerSuccess = createAction(\"auth/registerSuccess\")\r\nexport const registerError = createAction(\"auth/registerError\")\r\n\r\n//////////////////LOGIN\r\n\r\nexport const loginRequest = createAction(\"auth/loginRequest\")\r\nexport const loginSuccess = createAction(\"auth/loginSuccess\")\r\nexport const loginError = createAction(\"auth/loginError\")\r\n\r\n/////////////////LOGOUT\r\n\r\nexport const logoutRequest = createAction(\"auth/registerRequest\")\r\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\")\r\nexport const logoutError = createAction(\"auth/logoutError\")\r\n\r\n///////////////////GETCURRENTUSER\r\n\r\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\")\r\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\")\r\nexport const getCurrentUserError = createAction(\"auth/getCurrentUserError\")\r\n\r\nconst authAction = {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError\r\n}\r\n\r\nexport default authAction;","import axios from \"axios\"\r\n\r\nimport {\r\n    getCurrentUserError,\r\n    getCurrentUserRequest, getCurrentUserSuccess,\r\n    loginError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    logoutError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    registerError,\r\n    registerRequest,\r\n    registerSuccess\r\n} from \"./auth-actions\";\r\nimport {userToken} from \"../token\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\"\r\n\r\nexport const register = infoUser => async dispatch => {\r\n    dispatch(registerRequest())\r\n    try {\r\n        const {data} = await axios.post(\"/users/signup\", infoUser)\r\n        localStorage.setItem(\"userToken\", data.token)\r\n\r\n        let  localToken = localStorage.getItem(\"userToken\")\r\n        userToken.set(localToken)\r\n\r\n        dispatch(registerSuccess(data))\r\n    } catch (error) {\r\n        dispatch(registerError(error.message))\r\n    }\r\n}\r\n\r\nexport const logIn = infoUser => async dispatch => {\r\n    dispatch(loginRequest())\r\n    try {\r\n        const {data} = await axios.post(\"/users/login\", infoUser)\r\n        localStorage.setItem(\"userToken\", data.token)\r\n\r\n        let  localToken = localStorage.getItem(\"userToken\")\r\n        userToken.set(localToken)\r\n\r\n        dispatch(loginSuccess(data))\r\n    } catch (error) {\r\n        dispatch(loginError(error.message))\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    localStorage.setItem(\"userToken\", \"\")\r\n    dispatch(logoutRequest())\r\n    try {\r\n\r\n        await axios.post(\"/users/logout\")\r\n        userToken.unset()\r\n\r\n        dispatch(logoutSuccess())\r\n    } catch (error) {\r\n        dispatch(logoutError(error.message))\r\n    }\r\n}\r\n\r\nexport const getCurrentUser = () => async (dispatch,getState) => {\r\n    let  localToken = localStorage.getItem(\"userToken\")\r\n\r\n    if (!localToken){\r\n        return;\r\n    }\r\n    userToken.set(localToken)\r\n    dispatch(getCurrentUserRequest());\r\n    try {\r\n        const {data} = await axios.get(\"/users/current\")\r\n        dispatch(getCurrentUserSuccess(data))\r\n    } catch (error) {\r\n        dispatch(getCurrentUserError(error.message))\r\n    }\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport shortid from \"shortid\"\r\n\r\nimport {fields} from \"./fields\"\r\nimport {state} from \"./state/InitialState\";\r\n\r\nimport * as authOperation from \"../redux/auth/auth-operations\";\r\nimport styles from \"./styles/RegisteView.module.css\";\r\n\r\nfunction RegisterView() {\r\n    const dispatch = useDispatch()\r\n    const [user, setUser] = useState(state.register)\r\n\r\n    const handleChange = ({target}) => {\r\n        const {name, value} = target;\r\n        setUser({...user, [name]: value})\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperation.register(user))\r\n        reset()\r\n    }\r\n\r\n    const reset = () => {\r\n        setUser({\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        })\r\n    }\r\n\r\n    const inputNameId = shortid.generate();\r\n    const inputEmailId = shortid.generate();\r\n    const inputPassId = shortid.generate();\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n        <form onSubmit={handleSubmit} className={styles.signin}>\r\n\r\n            <input\r\n                className={styles.name}\r\n                id={inputNameId}\r\n                value={user.name}\r\n                {...fields.userName}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            <input\r\n                className={styles.email}\r\n                id={inputEmailId}\r\n                value={user.email}\r\n                {...fields.userEmail}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            <input\r\n                className={styles.pass}\r\n                id={inputPassId}\r\n                value={user.password}\r\n                {...fields.userPass}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            <button type=\"submit\">Reg</button>\r\n           <p><Link to=\"/login\" className=\"flipper\">Уже зарегистрированы? Войти.</Link></p>\r\n        </form>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nexport default RegisterView;","import React from 'react';\r\nimport {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport {fields} from \"./fields\";\r\nimport {state} from \"./state/InitialState\";\r\n\r\nimport styles from \"./styles/LoginView.module.css\"\r\n\r\nimport * as authOperation from \"../redux/auth/auth-operations\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction LoginView() {\r\n    const dispatch = useDispatch()\r\n    const [user, setUser] = useState(state.login)\r\n\r\n    const handleChange = ({target}) => {\r\n        const {name, value} = target\r\n        setUser({...user, [name]: value})\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperation.logIn(user))\r\n        reset()\r\n    }\r\n\r\n    const reset = () => {\r\n        setUser({...state.login})\r\n    }\r\n\r\n    const inputEmailId = shortid.generate();\r\n    const inputPassId = shortid.generate();\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <form onSubmit={handleSubmit} className={styles.signin}>\r\n\r\n                {/*<label htmlFor={inputEmailId}> Email</label>*/}\r\n                <input\r\n                    className={styles.email}\r\n                    id={inputEmailId}\r\n                    value={user.email}\r\n                    {...fields.userEmail}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                {/*<label htmlFor={inputPassId}>Password</label>*/}\r\n                <input\r\n                    className={styles.pass}\r\n                    id={inputPassId}\r\n                    value={user.password}\r\n                    {...fields.userPass}\r\n                    onChange={handleChange}\r\n\r\n                />\r\n\r\n                <button type=\"submit\">Go</button>\r\n                <p> <Link to=\"/register\" >Ещё нет аккаунта ? Зарегистрируйся!</Link></p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginView;","import React from 'react';\r\n\r\nconst TodoView = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoView;","export const getIsAuthenticated = state => !!state.auth.token\r\n\r\nexport const userName = state => state.auth.user.name","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getIsAuthenticated} from \"../../../../redux/auth/auth-selectors\";\r\nimport styles from \"./SiteNav.module.css\"\r\n\r\n\r\nconst SiteNav = () => {\r\n    const isAuthenticated = useSelector(getIsAuthenticated);\r\n    return (\r\n            <div>\r\n                <NavLink exact to=\"/\" className={styles.link} activeClassName={styles.activeLink}> Главная</NavLink>\r\n                {isAuthenticated &&\r\n                <NavLink exact to=\"/contacts\" className={styles.link} activeClassName={styles.activeLink}>Контакты</NavLink>\r\n                }\r\n                {isAuthenticated &&\r\n            <NavLink exact to=\"/todo\" className={styles.link} activeClassName={styles.activeLink}>Заметки</NavLink>\r\n                }\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default SiteNav;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport styles from \"./AuthNav.module.css\"\r\n\r\nconst AuthNav = () => {\r\n    return (\r\n            <div>\r\n                <NavLink exact to=\"/register\" className={styles.link} activeClassName={styles.activeLink}> Регистрация</NavLink>\r\n                <NavLink exact to=\"/login\" className={styles.link} activeClassName={styles.activeLink}>Логин</NavLink>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default AuthNav;","export default __webpack_public_path__ + \"static/media/avatar.7e1fdb02.png\";","import React from 'react';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userName} from \"../../../../redux/auth/auth-selectors\";\r\n\r\nimport defAvatar from '../../../../avatar.png'\r\nimport {logout} from \"../../../../redux/auth/auth-operations\";\r\n\r\nfunction UserMenu(){\r\n    const dispatch = useDispatch()\r\n    const styles = {\r\n        userMenu:{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n        },\r\n        img:{\r\n            border: \"2px solid black\",\r\n        }\r\n    }\r\n    const name = useSelector(userName)\r\n\r\n    return (\r\n        <div style={styles.userMenu}>\r\n            <img style={styles} src={defAvatar} alt=\"\" width={50}/>\r\n            <span>Hello , {name} </span>\r\n            <button type=\"button\" onClick={()=> dispatch(logout())}>Logout</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserMenu;","import React from 'react';\r\n\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport SiteNav from \"./SiteNav\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport UserMenu from \"./UserMenu\";\r\n\r\nimport {getIsAuthenticated} from \"../../../redux/auth/auth-selectors\";\r\n\r\nfunction AppBar(){\r\n    const isAuthenticated = useSelector(getIsAuthenticated)\r\n    const styles = {\r\n        header:{\r\n            display: \"flex\",\r\n            height: \"70px\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            borderBottom: \"2px solid black\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header style={styles.header}>\r\n            <SiteNav/>\r\n            {isAuthenticated ? <UserMenu/> : <AuthNav/>}\r\n        </header>\r\n    );\r\n};\r\nexport default AppBar;","import React from 'react';\r\nimport AppBar from \"./Navigation/AppBar\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <AppBar/>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Route,Redirect} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getIsAuthenticated} from \"./redux/auth/auth-selectors\";\r\n\r\nconst PrivetRoute = ({component: Component, redirectTo,...routeProps}) => {\r\n        const isAuthenticated = useSelector(getIsAuthenticated);\r\n            return (\r\n                    <Route {...routeProps} render={props => isAuthenticated ?<Component {...props}/> : <Redirect to={redirectTo} /> } />\r\n                )\r\n};\r\n\r\nexport default PrivetRoute;","import React from 'react';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getIsAuthenticated} from \"./redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({component: Component,redirectTo,...routeProps}) => {\r\n    const isAuthenticated = useSelector(getIsAuthenticated);\r\n    return (\r\n        <Route {...routeProps} render={props =>isAuthenticated && routeProps.restricted? <Redirect to={redirectTo}/> : <Component {...props}/>}/>\r\n    )\r\n}\r\n\r\nexport default PublicRoute;","import {Suspense} from \"react\";\r\nimport {BrowserRouter as Router, Switch,} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\n\r\nimport HomeView from \"./view/HomeView\"\r\nimport ContactView from \"./view/ContactView\"\r\nimport RegisterView from \"./view/RegisterView\"\r\nimport LoginView from \"./view/LoginView\"\r\nimport TodoView from \"./view/TodoView\";\r\n\r\nimport Header from \"./components/header\";\r\n\r\nimport {getCurrentUser} from \"./redux/auth/auth-operations\"\r\nimport PrivetRoute from \"./PrivetRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nfunction Contacts() {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getCurrentUser())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Suspense fallback={<p>....Loading</p>}>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/\" component={HomeView} redirectTo=\"/login\"/>\r\n                    <PrivetRoute exact path=\"/contacts\" component={ContactView} redirectTo=\"/login\"/>\r\n                    <PrivetRoute exact path=\"/todo\" component={TodoView} redirectTo=\"/login\"/>\r\n                    <PublicRoute exact path=\"/register\" restricted component={RegisterView} redirectTo={\"/\"}/>\r\n                    <PublicRoute exact path=\"/login\" restricted component={LoginView} redirectTo={\"/\"}/>\r\n                </Switch>\r\n            </Suspense>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contacts;\r\n","import {combineReducers} from \"redux\";\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n    getCurrentUserError,\r\n    getCurrentUserSuccess,\r\n    loginSuccess,\r\n    logoutError,\r\n    logoutSuccess,\r\n    registerError,\r\n    registerSuccess\r\n} from \"./auth-actions\";\r\n\r\nconst initialUserState = {name: null, email: null};\r\n\r\nexport const user = createReducer(initialUserState, {\r\n    [registerSuccess]: (_, {payload}) => payload.user,\r\n    [loginSuccess]: (_, {payload}) => payload.user,\r\n    [logoutSuccess]: (_, {payload}) => initialUserState,\r\n    [getCurrentUserSuccess]: (_,{payload}) => payload\r\n})\r\nexport const token = createReducer(localStorage.getItem(\"userToken\"), {\r\n    [registerSuccess]: (_, {payload}) => payload.token,\r\n    [loginSuccess]: (_, {payload}) => payload.token,\r\n    [logoutSuccess]: () => null,\r\n})\r\nexport const error = createReducer(null, {\r\n    [registerError]: (_, {payload}) => payload,\r\n    [loginSuccess]: (_, {payload}) => payload,\r\n    [logoutError]: (_, {payload}) => payload,\r\n    [getCurrentUserError]: (_, {payload}) => payload,\r\n    [registerSuccess]: () => null,\r\n    [loginSuccess]: () => null,\r\n    [logoutSuccess]: () => null,\r\n    [getCurrentUserSuccess]: () => null\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    error\r\n})","import {combineReducers} from \"@reduxjs/toolkit\";\r\n\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactError,\r\n    addContactSuccess, deleteContactError,\r\n    deleteContactSuccess, fetchContactsError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    filterAction\r\n} from \"./contacts-actions\";\r\n\r\nexport const allContacts = createReducer([],{\r\n    [fetchContactsSuccess]:  (state, {payload}) => [...payload],\r\n    [addContactSuccess]: (state, {payload}) => {\r\n        return [...state, payload]\r\n    },\r\n    [deleteContactSuccess]: (state,{payload}) => {\r\n        const newList =  [...state];\r\n        return newList.filter(item => item.id !== payload)\r\n    }\r\n})\r\n\r\nexport const filter = createReducer(\"\",{\r\n    [filterAction]: (_,{payload}) => payload\r\n})\r\nexport const loading = createReducer(false,{\r\n    [fetchContactsRequest]: ()=> true,\r\n    [fetchContactsSuccess]: () => false\r\n})\r\nexport const error = createReducer(null,{\r\n    [fetchContactsError]: (_,{payload}) => payload,\r\n    [addContactError()]: (_,{payload}) => payload,\r\n    [deleteContactError]: (_,{payload}) => payload,\r\n    [fetchContactsSuccess]: () => null,\r\n    [addContactSuccess]: () => null,\r\n    [deleteContactSuccess]: () => null\r\n})\r\n\r\nexport default combineReducers({\r\n    list:allContacts,\r\n    filter ,\r\n    loading,\r\n    error\r\n})","import React from 'react';\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nexport const todo = createReducer([],{})\r\nexport const error = createReducer([],{})\r\nexport const loading = createReducer([],{})\r\n\r\nexport default combineReducers({\r\n    todo,\r\n    error,\r\n    loading\r\n});","import {configureStore,getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"./auth/auth-reducer\"\r\nimport contactsReducer from \"./contacts/contacts-reducer\"\r\nimport todoReducer from \"./todo/todo-reducer\"\r\n\r\nconst middleware  = getDefaultMiddleware(thunk);\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        auth: authReducer,\r\n        contacts: contactsReducer,\r\n        todo: todoReducer,\r\n    },\r\n    middleware\r\n})\r\nexport default store;","import React from 'react';\nimport Contacts from \"./Contacts\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <Contacts/>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}